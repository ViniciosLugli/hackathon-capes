generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model Article {
    id              String  @id
    doi             String? @unique
    title           String
    abstract        String  @db.Text
    language        String
    volume          String?
    issue           String?
    publicationYear Int?

    publicationType String?
    authors         String[]
    institutions    String[]

    publisherName String?
    journalName   String?
    issn          String?

    topics     Topic[]     @relation("ArticleTopics")
    keywords   Keyword[]
    fieldAreas FieldArea[]

    status         ArticleStatus @default(PUBLISHED)
    isOpenAccess   Boolean       @default(false)
    isPeerReviewed Boolean       @default(false)

    citationsMade     Citation[] @relation("CitationsMade")
    citationsReceived Citation[] @relation("CitationsReceived")

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Citation {
    id              String  @id @default(cuid())
    citingArticle   Article @relation("CitationsMade", fields: [citingArticleId], references: [id])
    citingArticleId String

    citedArticle   Article? @relation("CitationsReceived", fields: [citedArticleId], references: [id])
    citedArticleId String?

    citedSiteId  String?
    citedDoi     String?
    citedTitle   String?
    citedAuthors String[] @default([])
    citedJournal String?
    citedVolume  String?
    citedIssue   String?
    citedPages   String?
    citedYear    Int?
    citedUrl     String?

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Topic {
    id          String    @id @default(cuid())
    name        String    @unique
    description String?   @db.Text
    articles    Article[] @relation("ArticleTopics")
    parentTopic Topic?    @relation("TopicHierarchy", fields: [parentId], references: [id])
    parentId    String?
    subtopics   Topic[]   @relation("TopicHierarchy")
    createdAt   DateTime  @default(now())
    updatedAt   DateTime  @updatedAt
}

model FieldArea {
    id          String    @id @default(cuid())
    name        String    @unique
    description String?   @db.Text
    articles    Article[]
    createdAt   DateTime  @default(now())
    updatedAt   DateTime  @updatedAt
}

model Keyword {
    id        String    @id @default(cuid())
    name      String    @unique
    articles  Article[]
    createdAt DateTime  @default(now())
    updatedAt DateTime  @updatedAt
}

enum ArticleStatus {
    DRAFT
    PUBLISHED
    RETRACTED
}
